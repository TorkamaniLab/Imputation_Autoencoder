#!/bin/bash
##### project id must be bif138 (our official project ID, all lower case)
#BSUB -P bif138
#####24 hours
#BSUB -W 24:00
#BSUB -nnodes 1
#########BSUB -alloc_flags gpumps
#BSUB -q batch-hm
#BSUB -o logs/job_%J.out
#BSUB -e logs/job_%J.log


#script=/gpfs/alpine/bif138/scratch/raqueld/Imputation_Autoencoder/optuna_phased_pipeline/chr22_test/22_17274081-17382360/22_17274081-17382360_train.sh.001
#bsub -env "all, input=$script" -J $(basename $script) 1_run_trials_a100.lsf
#out=/gpfs/alpine/bif138/raqueld/scratch/Imputation_Autoencoder/optuna_phased_pipeline/chr22_test
#while read script; do bsub -env "all, input=$script" -J $(basename $script) 1_run_trials_a100.lsf; done < $out/full_training_list.txt;
#for script in chr22_test/22_*/*.001; do echo $script; bsub -env "all, input=$script" -J $(basename $script) 1_run_trials_a100.lsf; done


#submit all
#grep "\.001$" /gpfs/alpine/bif138/scratch/raqueld/Imputation_Autoencoder/optuna_phased_pipeline/chr22_test/full_training_list.txt > 001_list.txt
#the max job limit is 100, so we have to submit 100 jobs at a time
#split -l 90 -d -a 2 001_list.txt 001_list.txt.
#while read script; do bsub -env "all, input=$script" -J $(basename $script) 1_run_trials_a100.lsf; done < 001_list.txt.00
#while read script; do bsub -env "all, input=$script" -J $(basename $script) 1_run_trials_a100.lsf; done < 001_list.txt.01
#while read script; do bsub -env "all, input=$script" -J $(basename $script) 1_run_trials_a100.lsf; done < 001_list.txt.02


#bsub -env "all, input=chr22_models/22_17274081-17382360/22_17274081-17382360_train.sh.001" 1_run_trials_test.lsf
#/gpfs/alpine/bif138/scratch/raqueld/Imputation_Autoencoder/optuna_phased_pipeline/chr22_models/22_17274081-17382360/22_17274081-17382360_train.sh.001

####load modules
####echo "using orca from $(which orca)"
###module load open-ce/0.1-0
###conda activate cloned_env
####source ~/.bashrc

#module use /sw/aaims/summit/modulefiles 
#module load ray # (alternatively open-ce-pyt/1.3.1-py38) 
#export PYTHONPATH=$PYTHONPATH:/ccs/proj/bif138/summit/lib/python3.8/site-packages 
#module load bzip2
#module load r/4.0.5

source /ccs/proj/bif138/env.sh

#debugging
echo -e "Work dir is $LS_SUBCWD"

gsstarttime=$(date +%s)


indir=$(dirname $input)
inscript=$(basename $input)
subdir=$LS_SUBCWD

echo -e "cd $indir && bash $inscript"
echo -e "Running $inscript, check $input.* for progress info and log messages."

cd $indir 

#jsrun -n 1 -g 6 -c 20 bash $inscript
$subdir/with_postgresql.sh 22_17274081-17382360 jsrun -r 50 -g 1 -c 7 -b packed:7 --latency_priority gpu-cpu,cpu-cpu bash $inscript
#jsrun -r 1 -n 1 -g 6 -c 42 --latency_priority gpu-cpu bash $inscript

gsendtime=$(date +%s)

gsruntime=$((gsendtime-gsstarttime))


echo "Run time: $gsruntime"


echo "Done. Exiting..."


exit

